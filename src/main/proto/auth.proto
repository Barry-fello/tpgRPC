syntax = "proto3";
/*
 * Auteur : BARRY Ibrahima
 */
package auth;

import "google/protobuf/empty.proto";

option java_package = "ditinn.proto.auth";
option java_multiple_files = true;

// Enumération pour les statuts de réponse
enum ResponseStatus {
  GOOD = 0;
  BAD = 1;
  DONE = 2;
  ERROR = 3;
}
// Message pour les informations du client
message ClientInfo {
  string ipAddress = 1;
  int32 port = 2;
  string message = 3;
}

// Message pour la gestion des identités
message Identite {
  string login = 1;
  string password = 2;
  string dateTime = 3;
}
// Message pour la réponse vide
message EmptyResponse {}
// Message pour la réponse aux identités
message IdentiteResponse {
  ResponseStatus status = 1;
}

// Message pour les requêtes d'authentification
message AuthRequest {
  Identite identiteRequest = 1;
}

// Service les opérations de client checker
service ASChecker {
  rpc simpleCheck(Identite) returns (IdentiteResponse);
}

// Service pour les opérations de client manager
service ASManager {
  rpc simplesCheck(Identite) returns (IdentiteResponse);
  rpc add(AuthRequest) returns (IdentiteResponse);
  rpc update(AuthRequest) returns (IdentiteResponse);
  rpc delete(AuthRequest) returns (IdentiteResponse);
}

// Service pour la journalisation
service LoggingService {
  rpc simpleLog(ClientInfo) returns (EmptyResponse);
}
// Requête pour récupérer les logs (peut être vide ou avec des critères)
message GetLogRequest {
  string filter = 1;
}
